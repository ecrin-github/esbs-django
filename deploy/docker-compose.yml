---
version: '3.8'
services:
  context-db:
    image: postgres:14
    container_name: context-db
    restart: unless-stopped
    command: postgres -c 'max_connections=300'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: context
    ports:
      - 5436:5432
    healthcheck:
      test: [ CMD-SHELL, pg_isready -h localhost -p 5432 ]
      interval: 10s
      timeout: 30s
      retries: 5

  rms-db:
    image: postgres:14
    container_name: rms-db
    restart: unless-stopped
    command: postgres -c 'max_connections=300'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rms
    ports:
      - 5437:5432
    healthcheck:
      test: [ CMD-SHELL, pg_isready -h localhost -p 5432 ]
      interval: 10s
      timeout: 30s
      retries: 5

  mdm-db:
    image: postgres:14
    container_name: mdm-db
    restart: unless-stopped
    command: postgres -c 'max_connections=300'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mdm
    ports:
      - 5438:5432
    healthcheck:
      test: [ CMD-SHELL, pg_isready -h localhost -p 5432 ]
      interval: 10s
      timeout: 30s
      retries: 5

  general-db:
    image: postgres:14
    container_name: general-db
    restart: unless-stopped
    command: postgres -c 'max_connections=300'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: general
    ports:
      - 5439:5432
    healthcheck:
      test: [ CMD-SHELL, pg_isready -h localhost -p 5432 ]
      interval: 10s
      timeout: 30s
      retries: 5

  user-db:
    image: postgres:14
    container_name: user-db
    restart: unless-stopped
    command: postgres -c 'max_connections=300'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: users
    ports:
      - 5440:5432
    healthcheck:
      test: [ CMD-SHELL, pg_isready -h localhost -p 5432 ]
      interval: 10s
      timeout: 30s
      retries: 5

  esbs-db:
    image: postgres:14
    container_name: esbs-db
    restart: unless-stopped
    command: postgres -c 'max_connections=300'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: esbs
    ports:
      - 5441:5432
    healthcheck:
      test: [ CMD-SHELL, pg_isready -h localhost -p 5432 ]
      interval: 10s
      timeout: 30s
      retries: 5

  esbs:
    build: ./Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
        - ./app/:/usr/src/app/
    ports:
      - "8000:8000"
    depends_on:
      - context-db
      - rms-db
      - mdm-db
      - general-db
      - user-db
      - esbs-db