# Generated by Django 4.1.6 on 2024-04-18 08:09

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('general', '0001_initial'),
        ('context', '0001_initial'),
        ('mdm', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataTransferProcesses',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('initial_contact_date', models.DateTimeField(blank=True, null=True)),
                ('set_up_complete_date', models.DateTimeField(blank=True, null=True)),
                ('md_access_granted_date', models.DateTimeField(blank=True, null=True)),
                ('md_complete_date', models.DateTimeField(blank=True, null=True)),
                ('dta_agreed_date', models.DateTimeField(blank=True, null=True)),
                ('upload_access_requested_date', models.DateTimeField(blank=True, null=True)),
                ('upload_access_confirmed_date', models.DateTimeField(blank=True, null=True)),
                ('upload_complete_date', models.DateTimeField(blank=True, null=True)),
                ('qc_checks_complete_date', models.DateTimeField(blank=True, null=True)),
                ('md_integrated_with_mdr_date', models.DateTimeField(blank=True, null=True)),
                ('availability_requested_date', models.DateTimeField(blank=True, null=True)),
                ('availability_confirmed_date', models.DateTimeField(blank=True, null=True)),
                ('created_on', models.DateTimeField(default=datetime.datetime.utcnow)),
                ('organisation', models.ForeignKey(blank=True, db_column='organisation_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_org_id', to='general.organisations')),
                ('status', models.ForeignKey(blank=True, db_column='status_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_status_id', to='context.dtpstatustypes')),
            ],
            options={
                'db_table': 'data_transfer_processes',
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='DataUseProcesses',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('initial_contact_date', models.DateTimeField(blank=True, null=True)),
                ('set_up_completed_date', models.DateTimeField(blank=True, null=True)),
                ('prereqs_met_date', models.DateTimeField(blank=True, null=True)),
                ('dua_agreed_date', models.DateTimeField(blank=True, null=True)),
                ('availability_requested_date', models.DateTimeField(blank=True, null=True)),
                ('availability_confirmed_date', models.DateTimeField(blank=True, null=True)),
                ('access_confirmed_date', models.DateTimeField(blank=True, null=True)),
                ('created_on', models.DateTimeField(default=datetime.datetime.utcnow)),
                ('organisation', models.ForeignKey(blank=True, db_column='org_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organisation', to='general.organisations')),
                ('status', models.ForeignKey(blank=True, db_column='status_id', default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='dup_status_id', to='context.dupstatustypes')),
            ],
            options={
                'db_table': 'data_use_processes',
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='RmsRecordChanges',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('table_name', models.CharField(blank=True, max_length=255, null=True)),
                ('change_type', models.CharField(blank=True, choices=[('Insert', 'Insert'), ('Update', 'Update'), ('Delete', 'Delete')], max_length=15, null=True)),
                ('change_time', models.DateTimeField(default=datetime.datetime.utcnow)),
                ('previous_value', models.TextField(blank=True, null=True)),
                ('new_value', models.TextField(blank=True, null=True)),
                ('user_id', models.ForeignKey(blank=True, db_column='user_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rms_record_changes_user_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'rms_record_changes',
                'ordering': ['-change_time'],
            },
        ),
        migrations.CreateModel(
            name='DupStudies',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_on', models.DateTimeField(default=datetime.datetime.utcnow)),
                ('dup_id', models.ForeignKey(blank=True, db_column='dup_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dup_studies_dup_id', to='rms.datauseprocesses')),
                ('study_id', models.ForeignKey(blank=True, db_column='study_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dup_studies_study_id', to='mdm.studies')),
            ],
            options={
                'db_table': 'dup_studies',
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='DupSecondaryUse',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('secondary_use_summary', models.TextField(blank=True, null=True)),
                ('publication', models.TextField(blank=True, null=True)),
                ('doi', models.TextField(blank=True, null=True)),
                ('attribution_present', models.BooleanField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(default=datetime.datetime.utcnow)),
                ('dup_id', models.ForeignKey(blank=True, db_column='dup_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dup_secondary_use_dup_id', to='rms.datauseprocesses')),
            ],
            options={
                'db_table': 'dup_secondary_use',
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='DupPrereqs',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('prereq_notes', models.TextField(blank=True, null=True)),
                ('prereq_met', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(default=datetime.datetime.utcnow)),
                ('dup_id', models.ForeignKey(blank=True, db_column='dup_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dup_prereqs_dup_id', to='rms.datauseprocesses')),
                ('object_id', models.ForeignKey(blank=True, db_column='object_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dup_prereqs_object_id', to='mdm.dataobjects')),
                ('prereq_type', models.ForeignKey(blank=True, db_column='prereq_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dup_prereqs_prereq_id', to='context.accessprereqtypes')),
            ],
            options={
                'db_table': 'dup_prereqs',
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='DupPeople',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(default=datetime.datetime.utcnow)),
                ('dup_id', models.ForeignKey(blank=True, db_column='dup_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dup_people_dup_id', to='rms.datauseprocesses')),
                ('person', models.ForeignKey(blank=True, db_column='person_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dup_people_person_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'dup_people',
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='DupObjects',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('access_details', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(default=datetime.datetime.utcnow)),
                ('access_type', models.ForeignKey(blank=True, db_column='access_type_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dup_objects_access_type_id', to='context.accessprereqtypes')),
                ('dup_id', models.ForeignKey(blank=True, db_column='dup_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dup_objects_dup_id', to='rms.datauseprocesses')),
                ('object_id', models.ForeignKey(blank=True, db_column='object_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dup_objects_object_id', to='mdm.dataobjects')),
            ],
            options={
                'db_table': 'dup_objects',
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='DupNotes',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(db_index=True, default=datetime.datetime.utcnow)),
                ('author', models.ForeignKey(blank=True, db_column='author', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dup_notes_author', to=settings.AUTH_USER_MODEL)),
                ('dup_id', models.ForeignKey(blank=True, db_column='dup_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dup_notes_dup_id', to='rms.datauseprocesses')),
            ],
            options={
                'db_table': 'dup_notes',
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='DtpStudies',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('md_check_date', models.DateTimeField(blank=True, null=True)),
                ('created_on', models.DateTimeField(default=datetime.datetime.utcnow)),
                ('dtp_id', models.ForeignKey(blank=True, db_column='dtp_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_studies_dtp_id', to='rms.datatransferprocesses')),
                ('md_check_by', models.ForeignKey(blank=True, db_column='md_check_by', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_studies_md_check_by', to=settings.AUTH_USER_MODEL)),
                ('md_check_status', models.ForeignKey(blank=True, db_column='md_check_status_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_studies_md_check_status_id', to='context.checkstatustypes')),
                ('study_id', models.ForeignKey(blank=True, db_column='study_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_studies_study_id', to='mdm.studies')),
            ],
            options={
                'db_table': 'dtp_studies',
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='DtpPrereqs',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('prereq_notes', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(default=datetime.datetime.utcnow)),
                ('dtp_id', models.ForeignKey(blank=True, db_column='dtp_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_prereqs_dtp_id', to='rms.datatransferprocesses')),
                ('object_id', models.ForeignKey(blank=True, db_column='object_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_prereqs_object_id', to='mdm.dataobjects')),
                ('prereq_type', models.ForeignKey(blank=True, db_column='prereq_type_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_prereqs_prereq_type_id', to='context.accessprereqtypes')),
            ],
            options={
                'db_table': 'dtp_prereqs',
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='DtpPeople',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(default=datetime.datetime.utcnow)),
                ('dtp_id', models.ForeignKey(db_column='dtp_id', default=None, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_people_dtp_id', to='rms.datatransferprocesses')),
                ('person', models.ForeignKey(db_column='person_id', default=None, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_people_person_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'dtp_people',
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='DtpObjects',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('is_dataset', models.BooleanField(default=False)),
                ('download_allowed', models.BooleanField(default=False)),
                ('access_details', models.TextField(blank=True, null=True)),
                ('embargo_requested', models.BooleanField(default=False)),
                ('embargo_regime', models.TextField(blank=True, null=True)),
                ('embargo_still_applies', models.BooleanField(default=False)),
                ('access_check_date', models.DateTimeField(blank=True, null=True)),
                ('md_check_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(default=datetime.datetime.utcnow)),
                ('access_check_by', models.ForeignKey(blank=True, db_column='access_check_by', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_objects_access_check_by', to=settings.AUTH_USER_MODEL)),
                ('access_check_status', models.ForeignKey(blank=True, db_column='access_check_status_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_objects_access_check_status_id', to='context.checkstatustypes')),
                ('access_type', models.ForeignKey(blank=True, db_column='access_type_id', default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_objects_access_type_id', to='context.objectaccesstypes')),
                ('dtp_id', models.ForeignKey(blank=True, db_column='dtp_id', default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_objects_dtp_id', to='rms.datatransferprocesses')),
                ('md_check_by', models.ForeignKey(blank=True, db_column='md_check_by', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_objects_md_check_by', to=settings.AUTH_USER_MODEL)),
                ('md_check_status', models.ForeignKey(blank=True, db_column='md_check_status_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_objects_md_check_status_id', to='context.checkstatustypes')),
                ('object_id', models.ForeignKey(blank=True, db_column='object_id', default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_objects_object_id', to='mdm.dataobjects')),
            ],
            options={
                'db_table': 'dtp_objects',
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='DtpNotes',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(default=datetime.datetime.utcnow)),
                ('author', models.ForeignKey(blank=True, db_column='author', default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='dtp_notes_author', to=settings.AUTH_USER_MODEL)),
                ('dtp_id', models.ForeignKey(blank=True, db_column='dtp_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_notes_dtp_id', to='rms.datatransferprocesses')),
            ],
            options={
                'db_table': 'dtp_notes',
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='DtpDatasets',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('legal_status_text', models.TextField(blank=True, null=True)),
                ('legal_status_path', models.TextField(blank=True, null=True)),
                ('desc_md_check_status_date', models.DateTimeField(blank=True, default=datetime.datetime.utcnow, null=True)),
                ('deident_check_status_date', models.DateTimeField(blank=True, default=datetime.datetime.utcnow, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(default=datetime.datetime.utcnow)),
                ('deident_check_by', models.ForeignKey(blank=True, db_column='deident_check_by', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_datasets_deident_check_by', to=settings.AUTH_USER_MODEL)),
                ('deident_check_status', models.ForeignKey(blank=True, db_column='deident_check_status_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_datasets_deident_check_status_id', to='context.checkstatustypes')),
                ('desc_md_check_by', models.ForeignKey(blank=True, db_column='desc_md_check_by', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_datasets_desc_md_check_by', to=settings.AUTH_USER_MODEL)),
                ('desc_md_check_status', models.ForeignKey(blank=True, db_column='desc_md_check_status_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_datasets_desc_md_check_status_id', to='context.checkstatustypes')),
                ('dtp_id', models.ForeignKey(blank=True, db_column='dtp_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_datasets_dtp_id', to='rms.datatransferprocesses')),
                ('legal_status', models.ForeignKey(blank=True, db_column='legal_status_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_datasets_legal_status_id', to='context.legalstatustypes')),
                ('object_id', models.ForeignKey(blank=True, db_column='object_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dtp_datasets_object_id', to='mdm.dataobjects')),
            ],
            options={
                'db_table': 'dtp_datasets',
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='DataUseAccesses',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('conforms_to_default', models.BooleanField(db_index=True, default=False)),
                ('variations', models.TextField(blank=True, null=True)),
                ('repo_is_proxy_provider', models.BooleanField(db_index=True, default=False)),
                ('dua_file_path', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(db_index=True, default=datetime.datetime.utcnow)),
                ('dup_id', models.ForeignKey(blank=True, db_column='dup_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dua_dup_id', to='rms.datauseprocesses')),
                ('provider_signatory_1', models.ForeignKey(db_column='provider_signatory_1', default=None, on_delete=django.db.models.deletion.CASCADE, related_name='dua_provider_signatory_1', to=settings.AUTH_USER_MODEL)),
                ('provider_signatory_2', models.ForeignKey(db_column='provider_signatory_2', default=None, on_delete=django.db.models.deletion.CASCADE, related_name='dua_provider_signatory_2', to=settings.AUTH_USER_MODEL)),
                ('repo_signatory_1', models.ForeignKey(db_column='repo_signatory_1', default=None, on_delete=django.db.models.deletion.CASCADE, related_name='dua_repo_signatory_1', to=settings.AUTH_USER_MODEL)),
                ('repo_signatory_2', models.ForeignKey(db_column='repo_signatory_2', default=None, on_delete=django.db.models.deletion.CASCADE, related_name='dua_repo_signatory_2', to=settings.AUTH_USER_MODEL)),
                ('requester_signatory_1', models.ForeignKey(db_column='requester_signatory_1', default=None, on_delete=django.db.models.deletion.CASCADE, related_name='dua_requester_signatory_1', to=settings.AUTH_USER_MODEL)),
                ('requester_signatory_2', models.ForeignKey(db_column='requester_signatory_2', default=None, on_delete=django.db.models.deletion.CASCADE, related_name='dua_requester_signatory_2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'data_use_accesses',
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='DataTransferAccesses',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('conforms_to_default', models.BooleanField(default=False)),
                ('variations', models.TextField(blank=True, null=True)),
                ('dta_file_path', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(default=datetime.datetime.utcnow)),
                ('dtp_id', models.ForeignKey(blank=True, db_column='dtp_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dta_dtp_id', to='rms.datatransferprocesses')),
                ('provider_signature1', models.ForeignKey(db_column='provider_signature_1', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dta_provider_signature_1', to=settings.AUTH_USER_MODEL)),
                ('provider_signature2', models.ForeignKey(db_column='provider_signature_2', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dta_provider_signature_2', to=settings.AUTH_USER_MODEL)),
                ('repo_signature1', models.ForeignKey(db_column='repo_signature_1', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dta_repo_signature_1', to=settings.AUTH_USER_MODEL)),
                ('repo_signature2', models.ForeignKey(db_column='repo_signature_2', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dta_repo_signature_2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'data_transfer_accesses',
                'ordering': ['created_on'],
            },
        ),
    ]
